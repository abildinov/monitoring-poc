server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10
    batchsize: 1048576
    batchwait: 1s
    timeout: 10s

scrape_configs:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.service"]

    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        target_label: container_name
        regex: '/(.*)'
      - source_labels: ['__meta_docker_container_id']
        target_label: container_id
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']      
        target_label: service
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']      
        target_label: project
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: stream
      - source_labels: ['__meta_docker_container_log_path']
        target_label: __path__

    pipeline_stages:
      - docker: {}
      - match:
          selector: '{service="grafana"}'
          stages:
            - regex:
                expression: '.*level=(?P<level>\w+).*'
            - labels:
                level:
      - match:
          selector: '{service="prometheus"}'
          stages:
            - regex:
                expression: '.*level=(?P<level>\w+).*'
            - labels:
                level:
      - match:
          selector: '{service="loki"}'
          stages:
            - regex:
                expression: '.*level=(?P<level>\w+).*'
            - labels:
                level:
